---
# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "careamics_n2v"
description: |
  Noise2Void (N2V) is a self-supervised deep-learning algorithm for denoising image
  data. It trains by randomly masking pixels in the input image and predicting their
  masked value from the surrounding pixels. N2V relies on two assumptions: firstly,
  that the underlying structures are smooths (i.e. continuous); secondly, that the
  noise is pixel-wise independent.

  This nf-core module allows for the use of a pre-trained model for inference; or
  training a model and then using it for inference (the training data will be the same
  as the data used during inference - this is a valid approach because the network is
  not biased towards a ground-truth).
keywords:
  - denoising
  - image_processing
  - image_analysis
  - careamics
tools:
  - "careamics":
      ## TODO nf-core: Add a description and other details for the software below
      description: |
        CAREamics is a PyTorch library aimed at simplifying the use of Noise2Void and
        its many variants and cousins (CARE, Noise2Noise, N2V2, P(P)N2V, HDN, muSplit
        etc.)."
      homepage: "https://github.com/CAREamics/careamics"
      documentation: "https://careamics.github.io/"
      tool_dev_url: "https://github.com/CAREamics/careamics"
      doi: "" #TODO
      licence: ["BSD-3-Clause license"]
      identifier: #TODO

## TODO nf-core: Add a description of all of the variables used as input
input:
  #
  ## TODO nf-core: Delete / customise this example input
    - bam:
        type: file
        description: Sorted BAM/CRAM/SAM file
        pattern: "*.{bam,cram,sam}"
        ontologies:
          - edam: "http://edamontology.org/format_25722"
          - edam: "http://edamontology.org/format_2573"
          - edam: "http://edamontology.org/format_3462"


## TODO nf-core: Add a description of all of the variables used as output
output:
  - bam:
  #
  ## TODO nf-core: Delete / customise this example output
    - "*.bam":
        type: file
        description: Sorted BAM/CRAM/SAM file
        pattern: "*.{bam,cram,sam}"
        ontologies:
          - edam: "http://edamontology.org/format_25722"
          - edam: "http://edamontology.org/format_2573"
          - edam: "http://edamontology.org/format_3462"

  - versions:
    - "versions.yml":
        type: file
        description: File containing software versions
        pattern: "versions.yml"

authors:
  - "@melisande-c"
maintainers:
  - "@melisande-c"
